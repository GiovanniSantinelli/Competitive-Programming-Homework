/*
Create two arrays to precomputer the left highest bar and the right highest bar of each element. After this we can just traverse the entire array with elements and compute how much
water we can store in that position. Complexity is O(N) since we make the pre-computation.
*/
int trappingWater(int arr[], int n) {
    int left[n] = {0};
    int right[n] = {0};
    int maxL = 0, maxR = 0;
    int water = 0;

    for (int i = 0; i < n; i++) {
        maxL = max(maxL, arr[i]);
        left[i] = maxL;
    }

    for (int i = n - 1; i >= 0; i--) {
        maxR = max(maxR, arr[i]);
        right[i] = maxR;
    }

    for (int i = 0; i < n; i++) {
        int tmp = min(left[i], right[i]) - arr[i];
        if (tmp > 0) water += tmp;
    }
    return water;
}
